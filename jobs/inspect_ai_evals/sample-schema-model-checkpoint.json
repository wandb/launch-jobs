{
  "type": "object",
  "properties": {
    "tasks": {
      "type": "array",
      "title": "Tasks",
      "description": "Select the tasks to run. For more information on the tasks, see the https://inspect.aisi.org.uk/evals/.",
      "items": {
        "type": "string",
        "enum": [
          "inspect_evals/mask",
          "inspect_evals/cyse3_visual_prompt_injection",
          "inspect_evals/gdm_approved_directories",
          "inspect_evals/gdm_calculator_improvement",
          "inspect_evals/gdm_context_length_mod_instrumental_only",
          "inspect_evals/gdm_context_length_mod_irreversibility_only",
          "inspect_evals/gdm_database_tool",
          "inspect_evals/gdm_latency_calculator",
          "inspect_evals/gdm_max_messages_calculator",
          "inspect_evals/gdm_max_tokens",
          "inspect_evals/gdm_oversight_frequency",
          "inspect_evals/gdm_read_logs",
          "inspect_evals/gdm_turn_off_filters",
          "inspect_evals/gdm_classifier_evasion",
          "inspect_evals/gdm_cover_your_tracks",
          "inspect_evals/gdm_oversight_pattern",
          "inspect_evals/gdm_strategic_rule_breaking",
          "inspect_evals/agentic_misalignment",
          "inspect_evals/sevenllm_mcq_zh",
          "inspect_evals/sevenllm_mcq_en",
          "inspect_evals/sevenllm_qa_zh",
          "inspect_evals/sevenllm_qa_en",
          "inspect_evals/sec_qa_v1",
          "inspect_evals/sec_qa_v1_5_shot",
          "inspect_evals/sec_qa_v2",
          "inspect_evals/sec_qa_v2_5_shot",
          "inspect_evals/lab_bench_litqa",
          "inspect_evals/lab_bench_suppqa",
          "inspect_evals/lab_bench_figqa",
          "inspect_evals/lab_bench_tableqa",
          "inspect_evals/lab_bench_dbqa",
          "inspect_evals/lab_bench_protocolqa",
          "inspect_evals/lab_bench_seqqa",
          "inspect_evals/lab_bench_cloning_scenarios",
          "inspect_evals/agentharm",
          "inspect_evals/agentharm_benign",
          "inspect_evals/wmdp_bio",
          "inspect_evals/wmdp_chem",
          "inspect_evals/wmdp_cyber",
          "inspect_evals/math",
          "inspect_evals/gsm8k",
          "inspect_evals/mathvista",
          "inspect_evals/mgsm",
          "inspect_evals/aime2024",
          "inspect_evals/vstar_bench_attribute_recognition",
          "inspect_evals/vstar_bench_spatial_relationship_reasoning",
          "inspect_evals/arc_easy",
          "inspect_evals/arc_challenge",
          "inspect_evals/hellaswag",
          "inspect_evals/piqa",
          "inspect_evals/infinite_bench_code_debug",
          "inspect_evals/infinite_bench_code_run",
          "inspect_evals/infinite_bench_kv_retrieval",
          "inspect_evals/infinite_bench_longbook_choice_eng",
          "inspect_evals/infinite_bench_longdialogue_qa_eng",
          "inspect_evals/infinite_bench_math_calc",
          "inspect_evals/infinite_bench_math_find",
          "inspect_evals/infinite_bench_number_string",
          "inspect_evals/infinite_bench_passkey",
          "inspect_evals/bbh",
          "inspect_evals/boolq",
          "inspect_evals/docvqa",
          "inspect_evals/drop",
          "inspect_evals/winogrande",
          "inspect_evals/race_h",
          "inspect_evals/mmmu_multiple_choice",
          "inspect_evals/mmmu_open",
          "inspect_evals/squad",
          "inspect_evals/ifeval",
          "inspect_evals/musr",
          "inspect_evals/niah",
          "inspect_evals/paws",
          "inspect_evals/mmlu_0_shot",
          "inspect_evals/mmlu_5_shot",
          "inspect_evals/mmlu_pro",
          "inspect_evals/gpqa_diamond",
          "inspect_evals/commonsense_qa",
          "inspect_evals/truthfulqa",
          "inspect_evals/xstest",
          "inspect_evals/pubmedqa",
          "inspect_evals/healthbench",
          "inspect_evals/healthbench_hard",
          "inspect_evals/healthbench_consensus",
          "inspect_evals/agie_aqua_rat",
          "inspect_evals/agie_logiqa_en",
          "inspect_evals/agie_lsat_ar",
          "inspect_evals/agie_lsat_lr",
          "inspect_evals/agie_lsat_rc",
          "inspect_evals/agie_math",
          "inspect_evals/agie_sat_en",
          "inspect_evals/agie_sat_en_without_passage",
          "inspect_evals/agie_sat_math",
          "inspect_evals/livebench",
          "inspect_evals/onet_m6",
          "inspect_evals/bbq",
          "inspect_evals/bold",
          "inspect_evals/hle",
          "inspect_evals/sycophancy",
          "inspect_evals/simpleqa",
          "inspect_evals/pre_flight",
          "inspect_evals/mmiu",
          "inspect_evals/strong_reject",
          "inspect_evals/stereoset",
          "inspect_evals/air_bench",
          "inspect_evals/mind2web",
          "inspect_evals/personality_BFI",
          "inspect_evals/personality_TRAIT",
          "inspect_evals/personality_PRIME",
          "inspect_evals/sciknoweval",
          "inspect_evals/chembench",
          "inspect_evals/lingoly",
          "inspect_evals/lingoly_too",
          "inspect_evals/sosbench",
          "inspect_evals/Zerobench",
          "inspect_evals/Zerobench Subquestions",
          "inspect_evals/writingbench",
          "inspect_evals/medqa",
          "inspect_evals/bbeh",
          "inspect_evals/bbeh_mini"
        ]
      }
    },
    "limit": {
      "type": "integer",
      "title": "Sample Limit",
      "description": "Maximum number of samples to evaluate for each task (e.g. 5, 10, 25, 50)"
    },
    "artifact_path": {
      "type": "string",
      "title": "Artifact Path",
      "description": "Path to the model artifact to use for the evaluation job",
      "format": "artifact_path"
    },
    "create_leaderboard": {
      "type": "boolean",
      "title": "Create a Leaderboard?",
      "description": "Choose to create a leaderboard from eval loggers. This will be updated with the results of the evaluation."
    },
    "hf_token": {
      "type": "string",
      "title": "Hugging Face Token",
      "description": "(Optional) Personal access token used to read gated datasets from Hugging Face.",
      "format": "secret"
    },
    "openai_api_key": {
      "type": "string",
      "title": "OpenAI API Key",
      "description": "(Optional) Some tasks require an OpenAI API key.",
      "format": "secret"
    }
  }
}
